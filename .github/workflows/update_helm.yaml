name: Build, Push Docker Image and Update Helm Chart

on:
  push:
    branches: [main, develop]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/go-api
  HELM_CHART_DIR: helm_charts

jobs:
  build-and-push:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Docker is running
        run: sudo docker info

      - name: Determine image tag
        id: determine-tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo "TAG=$TAG" >> $GITHUB_OUTPUT
            echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT
          else
            BRANCH=${GITHUB_REF#refs/heads/}
            BRANCH_CLEAN=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9]/-/g')
            echo "TAG=$BRANCH_CLEAN" >> $GITHUB_OUTPUT
            echo "VERSION=$BRANCH_CLEAN" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          TAG=${{ steps.determine-tag.outputs.TAG }}
          REPOSITORY="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

          sudo docker build \
            --build-arg VERSION=${{ steps.determine-tag.outputs.VERSION }} \
            -t $REPOSITORY:$TAG \
            -t $REPOSITORY:latest \
            ./go-api

      - name: Push Docker image
        if: github.event_name != 'pull_request'
        run: |
          TAG=${{ steps.determine-tag.outputs.TAG }}
          REPOSITORY="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

          sudo docker push $REPOSITORY:$TAG
          sudo docker push $REPOSITORY:latest

  update-helm-chart:
    needs: build-and-push
    runs-on: self-hosted
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get image tag
        id: get-tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo "TAG=$TAG" >> $GITHUB_OUTPUT
          else
            BRANCH=${GITHUB_REF#refs/heads/}
            BRANCH_CLEAN=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9]/-/g')
            echo "TAG=$BRANCH_CLEAN" >> $GITHUB_OUTPUT
          fi

      - name: Install yq for YAML manipulation
        run: |
          if ! command -v yq &> /dev/null; then
            sudo wget -q https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
            sudo chmod +x /usr/local/bin/yq
          fi

      - name: Update Helm chart values
        run: |
          TAG=${{ steps.get-tag.outputs.TAG }}
          REPOSITORY="${{ env.REGISTRY }}/${{ github.repository }}/go-api"

          yq eval ".image.repository = \"$REPOSITORY\"" -i ${{ env.HELM_CHART_DIR }}/values.yaml
          yq eval ".image.tag = \"$TAG\"" -i ${{ env.HELM_CHART_DIR }}/values.yaml

          VERSION=${TAG#v}
          yq eval ".appVersion = \"$VERSION\"" -i ${{ env.HELM_CHART_DIR }}/Chart.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git add ${{ env.HELM_CHART_DIR }}/values.yaml ${{ env.HELM_CHART_DIR }}/Chart.yaml
          git commit -m "ci: update helm chart with image tag ${{ steps.get-tag.outputs.TAG }}"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
