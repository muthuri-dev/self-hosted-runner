name: Build, Push Docker Image and Update Helm Chart

on:
  push:
    branches: [main, develop]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/go-api
  HELM_CHART_DIR: helm_charts

jobs:
  build-and-push:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine image tag
        id: determine-tag
        run: |
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            # For tags: use the tag name (v1.2.3)
            TAG=${GITHUB_REF#refs/tags/}
            echo "TAG=$TAG" >> $GITHUB_OUTPUT
            echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT
          else
            # For branches: use branch name and build number
            BRANCH=${GITHUB_REF#refs/heads/}
            BRANCH_CLEAN=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9]/-/g')
            echo "TAG=$BRANCH_CLEAN" >> $GITHUB_OUTPUT
            echo "VERSION=$BRANCH_CLEAN" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./go-api
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.determine-tag.outputs.TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.title=Go API
            org.opencontainers.image.version=${{ steps.determine-tag.outputs.VERSION }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.determine-tag.outputs.VERSION }}

  update-helm-chart:
    needs: build-and-push
    runs-on: self-hosted
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get image tag
        id: get-tag
        run: |
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            echo "TAG=$TAG" >> $GITHUB_OUTPUT
          else
            BRANCH=${GITHUB_REF#refs/heads/}
            BRANCH_CLEAN=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9]/-/g')
            echo "TAG=$BRANCH_CLEAN" >> $GITHUB_OUTPUT
          fi

      - name: Update Helm chart values
        run: |
          # Install yq for YAML manipulation
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

          TAG=${{ steps.get-tag.outputs.TAG }}
          REPOSITORY="${{ env.REGISTRY }}/${{ github.repository }}/go-api"

          # Update image repository and tag in values.yaml
          yq eval ".image.repository = \"$REPOSITORY\"" -i ${{ env.HELM_CHART_DIR }}/values.yaml
          yq eval ".image.tag = \"$TAG\"" -i ${{ env.HELM_CHART_DIR }}/values.yaml

          # Update appVersion in Chart.yaml (remove 'v' prefix for semantic versioning)
          VERSION=${TAG#v}
          yq eval ".appVersion = \"$VERSION\"" -i ${{ env.HELM_CHART_DIR }}/Chart.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ env.HELM_CHART_DIR }}/values.yaml ${{ env.HELM_CHART_DIR }}/Chart.yaml
          git commit -m "ci: update helm chart with image tag ${{ steps.get-tag.outputs.TAG }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
